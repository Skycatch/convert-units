diff --git a/README.md b/README.md
index 435e0d7..6830814 100644
--- a/README.md
+++ b/README.md
@@ -68,7 +68,7 @@ convert().possibilities('mass')
 You can also get the all the available units:
 ```js
 convert().possibilities()
-// [ 'mm', 'cm', 'm', 'in', 'ft', 'mi', 'mcg', 'mg', 'g', 'kg', 'oz', 'lb', 'ml', 'l', 'tsp', 'Tbs', 'fl-oz', 'cup', 'pnt', 'qt', 'gal', 'ea' ];
+// [ 'mm', 'cm', 'm', 'in', 'ft-us', 'ft', 'mi', 'mcg', 'mg', 'g', 'kg', 'oz', 'lb', 'ml', 'l', 'tsp', 'Tbs', 'fl-oz', 'cup', 'pnt', 'qt', 'gal', 'ea' ];
 ```
 
 To get a detailed description of a unit, use `describe`
@@ -124,6 +124,7 @@ Supported Units
 * cm
 * m
 * in
+* ft-us
 * ft
 * mi
 
diff --git a/lib/definitions/length.js b/lib/definitions/length.js
index 733233f..84a7adf 100644
--- a/lib/definitions/length.js
+++ b/lib/definitions/length.js
@@ -1,79 +1,86 @@
-var metric
-  , imperial;
+var metric,
+imperial;
 
 metric = {
   mm: {
     name: {
-      singular: 'Millimeter'
-    , plural: 'Millimeters'
-    }
-  , to_anchor: 1/1000
-  }
-, cm: {
+      singular: 'Millimeter',
+      plural: 'Millimeters'
+    },
+    to_anchor: 1/1000
+  },
+  cm: {
     name: {
-      singular: 'Centimeter'
-    , plural: 'Centimeters'
-    }
-  , to_anchor: 1/100
-  }
-, m: {
+      singular: 'Centimeter',
+      plural: 'Centimeters'
+    },
+    to_anchor: 1/100
+  },
+  m: {
     name: {
-      singular: 'Meter'
-    , plural: 'Meters'
-    }
-  , to_anchor: 1
-  }
-, km: {
+      singular: 'Meter',
+      plural: 'Meters'
+    },
+    to_anchor: 1
+  },
+  km: {
     name: {
-      singular: 'Kilometer'
-    , plural: 'Kilometers'
-    }
-  , to_anchor: 1000
+      singular: 'Kilometer',
+      plural: 'Kilometers'
+    },
+    to_anchor: 1000
   }
 };
 
 imperial = {
   'in': {
     name: {
-      singular: 'Inch'
-    , plural: 'Inches'
-    }
-  , to_anchor: 1/12
-  }
-, yd: {
+      singular: 'Inch',
+      plural: 'Inches'
+    },
+    to_anchor: 1/12
+  },
+  yd: {
     name: {
-      singular: 'Yard'
-    , plural: 'Yards'  
-    }
-  , to_anchor: 3
-  }
-, ft: {
+      singular: 'Yard',
+      plural: 'Yards'
+    },
+    to_anchor: 3
+  },
+  'ft-us': {
     name: {
-      singular: 'Foot'
-    , plural: 'Feet'
-    }
-  , to_anchor: 1
-  }
-, mi: {
+      singular: 'US Survey Foot',
+      plural: 'US Survey Feet'
+    },
+    to_anchor: 1.000002
+  },
+  ft: {
     name: {
-      singular: 'Mile'
-    , plural: 'Miles'
-    }
-  , to_anchor: 5280
+      singular: 'Foot',
+      plural: 'Feet'
+    },
+    to_anchor: 1
+  },
+  mi: {
+    name: {
+      singular: 'Mile',
+      plural: 'Miles'
+    },
+    to_anchor: 5280
   }
 };
 
 module.exports = {
-  metric: metric
-, imperial: imperial
-, _anchors: {
+  metric: metric,
+  imperial: imperial,
+  _anchors: {
     metric: {
-      unit: 'm'
-    , ratio: 3.281
-    }
-  , imperial: {
-      unit: 'ft'
-    , ratio: 1/3.281
+      unit: 'm',
+      ratio: 3.28084
+    },
+    imperial: {
+      unit: 'ft',
+      ratio: 1/3.28084
     }
   }
 };
diff --git a/package.json b/package.json
index fd1349e..27c4ad7 100644
--- a/package.json
+++ b/package.json
@@ -1,6 +1,6 @@
 {
   "name": "convert-units",
-  "version": "2.2.0",
+  "version": "2.3.0",
   "description": "Convert between quantities in different units",
   "main": "lib",
   "dependencies": {
diff --git a/test/lengths.js b/test/lengths.js
index 9893736..4c9e64b 100644
--- a/test/lengths.js
+++ b/test/lengths.js
@@ -9,6 +9,14 @@ tests['ft to ft'] = function () {
   assert.strictEqual( convert(1).from('ft').to('ft') , 1);
 };
 
+tests['ft to ft-us'] = function () {
+  assert.strictEqual( convert(1).from('ft').to('ft-us') , 0.999998000004);
+};
+
+tests['ft-us to ft'] = function () {
+  assert.strictEqual( convert(1).from('ft-us').to('ft') , 1.000002);
+};
+
 tests['in to in'] = function () {
   assert.strictEqual( convert(7).from('in').to('in') , 7);
 };
@@ -57,6 +65,14 @@ tests['m to ft'] = function () {
     , 'Expected: ' + expected +', Actual: ' + actual);
 };
 
+// When converting between systems, expect < 0.1% error
+tests['m to ft-us'] = function () {
+  var expected = 3.28084
+    , actual = convert(1).from('m').to('ft-us');
+  assert.ok( percentError(expected, actual) < ACCURACY
+    , 'Expected: ' + expected +', Actual: ' + actual);
+};
+
 tests['mm to ft'] = function () {
   var expected = 0.00328084
     , actual = convert(1).from('mm').to('ft');
diff --git a/test/possibilities.js b/test/possibilities.js
index f24ca1c..3c6c5ea 100644
--- a/test/possibilities.js
+++ b/test/possibilities.js
@@ -18,7 +18,7 @@ tests['kg possibilities'] = function () {
 
 tests['m possibilities'] = function () {
   var actual = convert().from('m').possibilities()
-    , expected = [ 'mm', 'cm', 'm', 'km', 'in', 'yd', 'ft', 'mi' ];
+    , expected = [ 'mm', 'cm', 'm', 'km', 'in', 'yd', 'ft-us', 'ft', 'mi' ];
   assert.deepEqual(actual.sort(), expected.sort())
 };
 
@@ -48,7 +48,7 @@ tests['volume flow rate possibilities'] = function () {
 
 tests['length possibilities'] = function () {
   var actual = convert().possibilities('length')
-    , expected = [ 'mm', 'cm', 'm', 'km', 'in', 'yd', 'ft', 'mi' ];
+    , expected = [ 'mm', 'cm', 'm', 'km', 'in', 'yd', 'ft-us', 'ft', 'mi' ];
   assert.deepEqual(actual.sort(), expected.sort())
 };
 
@@ -168,6 +168,7 @@ tests['all possibilities'] = function () {
       , 'fl-oz/h'
       , 'fl-oz/min'
       , 'fl-oz/s'
+      , 'ft-us'
       , 'ft'
       , 'ft/s'
       , 'ft2'
